apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: common-nginx
  labels:
    app: nginx
    env: stage
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
      env: stage
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1  
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: nginx
        env: stage
    spec:
      containers:
        - name: nginx-container
          image: nginx:alpine
          ports:
            - name: nginx-port
              containerPort: 80
          resources:
            limits:
              cpu: "500m"
              memory: "256Mi"
            requests:
              cpu: "200m"
              memory: "128Mi"
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 5
          volumeMounts:
            - name: html-conf
              mountPath: /usr/share/nginx/html
            - name: nginx-default-conf
              mountPath: /etc/nginx/conf.d
      volumes:
        - name: html-conf
          configMap:
            name: nginx-cm
            items:
              - key: index.html
                path: index.html
        - name: nginx-default-conf
          configMap: 
            name: nginx-cm
            items:
              - key: default.conf
                path: default.conf
